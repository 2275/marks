(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{294:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("最佳实践: 每次切换分支前 当前分支一定得是干净的(已提交状态)\n坑: \n    在切换分支时 如果当前分支上有未暂存的修改(第一次) 或者 有未提交的暂存(第一次)\n       分支可以切换成功  但是这种操作可能会污染其他分支\n动三个地方\n    HEAD\n    暂存区\n    工作目录\n")])])]),e("h3",{attrs:{id:"后悔药"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后悔药"}},[t._v("#")]),t._v(" 后悔药")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("工作区\n    如何撤回自己在工作目录中的修改 : git checkout --filename\n暂存区\n    如何何撤回自己的暂存  : git reset HEAD filename\n版本库              \n    如何撤回自己的提交    : git commit --amend\n        1.注释写错了,重新给用户一次机会改注释\n")])])]),e("h3",{attrs:{id:"reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" reset")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("git log    :  \ngit reflog : 主要是HEAD有变化 那么git reflog机会记录下来\n三部曲\n    第一部： git rest --soft HEAD~  (--amend)  \n        只动HEAD (带着分支一起移动)      \n    第二部: git reset [--mixed]   HEAD~ \n        动HEAD   (带着分支一起移动)  \n        动了暂存区\n    第三部:  git reset --hard  HEAD~   \n         动HEAD   (带着分支一起移动)  \n         动了暂存区\n         动了工作目录\n")])])]),e("h3",{attrs:{id:"checkout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#checkout"}},[t._v("#")]),t._v(" checkout")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("git  checkout commithash   &   git reset --hard commithash         \n    1.  checkout只动HEAD    --hard动HEAD而且带着分支一起走\n    2.  checkout对工作目录是安全的   --hard是强制覆盖工作目录\n\ngit checkout  commithash\ngit checkout --filename  \n      相比于git reset --hard  commitHash --filename  \n      第一  第二步都没做\n      只会动了工作目录\ngit checkout  commithash  <file>    \n      将会跳过第 1 步 \n      更新暂存区 \n      更新工作目录   \n")])])]),e("h3",{attrs:{id:"路径reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#路径reset"}},[t._v("#")]),t._v(" 路径reset")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("git reset HEAD filename     (reset 将会跳过第 1 步)    \n    动了暂存区")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);